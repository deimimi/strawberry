import{S as s,i as a,s as t,e,j as r,c as o,a as n,m as l,d as p,b as i,f as c,o as u,v as m,r as d,w as h,D as b,A as f,k as $,n as v,K as y,L as g,G as x,M as N,B as P,u as S,E as j,p as w,N as O,O as k,P as z}from"./vendor-a289ca3a.js";import{c as B,I as D}from"./Path-087b1fab.js";function E(s){let a,t,b;return t=new D({props:{path:s[1]}}),{c(){a=e("span"),r(t.$$.fragment),this.h()},l(s){a=o(s,"SPAN",{class:!0});var e=n(a);l(t.$$.fragment,e),e.forEach(p),this.h()},h(){i(a,"class","button-prefix svelte-1dz0pup")},m(s,e){c(s,a,e),u(t,a,null),b=!0},p(s,a){const e={};2&a&&(e.path=s[1]),t.$set(e)},i(s){b||(m(t.$$.fragment,s),b=!0)},o(s){d(t.$$.fragment,s),b=!1},d(s){s&&p(a),h(t)}}}function A(s){let a,t,r,l,u,h,O=s[1]&&E(s);const k=s[6].default,z=b(k,s,s[5],null);let B=[{class:"berry-button"},s[4]],D={};for(let e=0;e<B.length;e+=1)D=f(D,B[e]);return{c(){a=e("button"),t=e("div"),O&&O.c(),r=$(),z&&z.c(),this.h()},l(s){a=o(s,"BUTTON",{class:!0});var e=n(a);t=o(e,"DIV",{class:!0});var l=n(t);O&&O.l(l),r=v(l),z&&z.l(l),l.forEach(p),e.forEach(p),this.h()},h(){i(t,"class","content-wrapper svelte-1dz0pup"),y(a,D),g(a,"primary",s[0]),g(a,"icon",s[1]),g(a,"slot_used",s[3].default),g(a,"svelte-1dz0pup",!0)},m(e,o){c(e,a,o),x(a,t),O&&O.m(t,null),x(t,r),z&&z.m(t,null),l=!0,u||(h=N(s[2].call(null,a)),u=!0)},p(s,[e]){s[1]?O?(O.p(s,e),2&e&&m(O,1)):(O=E(s),O.c(),m(O,1),O.m(t,r)):O&&(P(),d(O,1,1,(()=>{O=null})),S()),z&&z.p&&(!l||32&e)&&j(z,k,s,s[5],l?e:-1,null,null),y(a,D=w(B,[{class:"berry-button"},16&e&&s[4]])),g(a,"primary",s[0]),g(a,"icon",s[1]),g(a,"slot_used",s[3].default),g(a,"svelte-1dz0pup",!0)},i(s){l||(m(O),m(z,s),l=!0)},o(s){d(O),d(z,s),l=!1},d(s){s&&p(a),O&&O.d(),z&&z.d(s),u=!1,h()}}}function G(s,a,t){const e=["primary","icon"];let r=O(a,e),{$$slots:o={},$$scope:n}=a;const l=k(o);let{primary:p=!1}=a,{icon:i=""}=a;const c=B();return s.$$set=s=>{a=f(f({},a),z(s)),t(4,r=O(a,e)),"primary"in s&&t(0,p=s.primary),"icon"in s&&t(1,i=s.icon),"$$scope"in s&&t(5,n=s.$$scope)},[p,i,c,l,r,n,o]}class I extends s{constructor(s){super(),a(this,s,G,A,t,{primary:0,icon:1})}}const J=JSON.parse('{"name":"Button","props":[{"kind":"let","name":"primary","optional":true,"value":false,"jsDoc":{"description":"Indicates whether the button should be coloured using the primary colour.","tags":[{"tag":"type","name":"","type":"boolean","optional":false,"description":""}]}},{"kind":"let","name":"icon","optional":true,"value":"","jsDoc":{"description":"A \\"d\\" string that is usable in an SVG path element.","tags":[{"tag":"type","name":"","type":"string","optional":false,"description":""}]}}],"exports":[],"customProperties":[{"name":"--br-button-width","value":"auto"},{"name":"--br-button-border","value":"var(--br-border)"}]}');JSON.parse('{"name":"Group","props":[],"exports":[],"customProperties":[]}');JSON.parse('{"name":"Tabs","props":[{"kind":"let","name":"tabs","optional":true}],"exports":[],"customProperties":[]}');export{I as B,J as d};
